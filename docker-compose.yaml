version: "3.9"

services:
  db:
    image: pgvector/pgvector:0.8.0-pg15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ayush
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

  api:
    build: 
      context: .
      dockerfile: dockerfile.fastapi
    container_name: fastapi_container
    restart: always
    environment:
      DB_NAME: mydatabase
      DB_USER: ayush
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
    expose:
      - "8000"   # only accessible inside network
    depends_on:
      - db
    command: ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]

  frontend:
    build:
      context: .
      dockerfile: dockerfile.react
      args:
        VITE_API_URL: http://api:8000/ask  # API inside Docker network
    container_name: react_container
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api
      - streamlit

  streamlit:
    build:
      context: .
      dockerfile: dockerfile.streamlit
    container_name: streamlit_container
    restart: always
    environment:
      DB_NAME: mydatabase
      DB_USER: ayush
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
    ports:
      - "8501:8501"   # used internally
    depends_on:
      - api
    volumes:
      - ./dashboard:/src/dashboard

  pipeline:
    build: .
    container_name: pipeline_container
    restart: always
    depends_on:
      - db
    environment:
      DB_NAME: mydatabase
      DB_USER: ayush
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
    command: ["python", "-m", "src.data_pipeline.main"]
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
